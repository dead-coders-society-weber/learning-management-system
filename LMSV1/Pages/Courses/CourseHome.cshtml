@page "{id:int}"
@model CourseHomeModel
@using Microsoft.AspNetCore.Identity
@using LMSV1.Models

@inject UserManager<User> UserManager
@{
    // var userLogged;
    ViewData["Title"] = Model.Course.CourseName;
    var user = await UserManager.GetUserAsync(User);
    // if (await UserManager.IsInRoleAsync(user, "Instructor"))
    // {
    //     user
    // }

}
<div id="col-1">
<h1>@Model.Course.CourseName</h1>
<h2>@Model.Course.Title</h2>
<p>
   <b>Location:</b> @Model.Course.Location <br />
   <b>Meet days:</b> @Model.Course.MeetDays <br />
   <b>Time:</b> @Model.Course.StartTime - @Model.Course.EndTime <br />
</p>
</div>
<div id="col-2">
    @if (user.Role == "Instructor"){
                //Instructor chart goes here
        var vara = 0;
        var varam = 0;
        var varbp = 0;
        var varb = 0;
        var varbm = 0;
        var varcp = 0;
        var varc = 0;
        var varlc = 0;
        foreach (var item in Model.Grades)
            switch (item)
            {
                case "A" :
                case null :vara++;
                            break;
                case "A-" : varam++;
                            break;
                case "B+" : varbp++;
                            break;
                case "B" :  varb++;
                            break;
                case "B-" : varbm++;
                            break;
                case "C+" : varcp++;
                            break;
                default: varlc++;
                            break;
            }
        <p>
            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
            <script type="text/javascript">
              google.charts.load('current', {'packages':['corechart']});
              google.charts.setOnLoadCallback(drawChart);

              function drawChart() {

                var data = google.visualization.arrayToDataTable([
                  ['Grade', 'Count'],
                  ['A', @vara],
                  ['A-', @varam],
                  ['B+', @varbp],
                  ['B',  @varb],
                  ['B-', @varbm],
                  ['C+', @varcp],
                  ['C',  @varc],
                  ['<C', @varlc]
                ]);

                var options = {
                  title: 'Student Grades',
                          colors: ['#00FF00','#00FF00', //A - Green
                                   '#003300','#003300','#003300', //B - Light Green
                                   '#CCCC00','#CCCC00', //C - Yellow
                                   '#FF0000'],//<C - Red                                    
                      is3D: true
                };

            var chart = new google.visualization.PieChart(document.getElementById('col-2'));

            chart.draw(data, options);
          }
        </script>
        </p>
        }
    else if (user.Role == "Student")
        {
        //PieChart of overall students grades
      
        //Instructor chart goes here
        var vara = 0;
        var varam = 0;
        var varbp = 0;
        var varb = 0;
        var varbm = 0;
        var varcp = 0;
        var varc = 0;
        var varlc = 0;
        foreach (var item in Model.Grades)
            switch (item)
            {
                case "A":
                case null:
                    vara++;
                    break;
                case "A-":
                    varam++;
                    break;
                case "B+":
                    varbp++;
                    break;
                case "B":
                    varb++;
                    break;
                case "B-":
                    varbm++;
                    break;
                case "C+":
                    varcp++;
                    break;
                default:
                    varlc++;
                    break;
            }
        <p>
            <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
            <script type="text/javascript">
                google.charts.load('current', { 'packages': ['corechart'] });
                google.charts.setOnLoadCallback(drawChart);

                function drawChart() {

                    var data = google.visualization.arrayToDataTable([
                        ['Grade', 'Count'],
                        ['A', @vara],
                        ['A-', @varam],
                        ['B+', @varbp],
                        ['B', @varb],
                        ['B-', @varbm],
                        ['C+', @varcp],
                        ['C', @varc],
                        ['<C', @varlc]
                    ]);

                    var options = {
                        title: 'Class Grades',
                        colors: ['#00FF00','#00FF00', //A - Green
                                 '#003300','#003300','#003300', //B - Light Green
                                 '#CCCC00','#CCCC00', //C - Yellow
                                 '#FF0000'],//<C - Red                                    
                          is3D: true
                    };

                    var chart = new google.visualization.PieChart(document.getElementById('col-2'));

                    chart.draw(data, options);
                }
            </script>
        </p>
    }
        

</div>

<p>
<h3>Assignments</h3></p>
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Max Points</th>
            <th>Due Date</th>
            <th>Submission Type</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Course.Assignments) 
        {
            <tr>
                <td>
                    <a asp-page="./Assignments/AssignmentHome" asp-route-id="@item.AssignmentID">
                        @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.MaxPoints)</td>
                <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                <td>@Html.DisplayFor(modelItem => item.SubmissionType)</td>
                <td>
                    @if (user.Role == "Instructor") {
                        <div>
                            <a asp-page="./Assignments/AssignmentEdit" asp-route-id="@item.AssignmentID">Edit</a> |
                            <a asp-page="./Assignments/AssignmentDelete" asp-route-id="@item.AssignmentID">Delete</a> |
                            <a asp-page="./Assignments/Submissions/Submissions" asp-route-id="@item.AssignmentID" asp-route-cid="@Model.Course.CourseID">Submissions</a>
                        </div>
                    }
                </td>
            </tr>
        }
          
    </tbody>
</table>

@if (user.Role == "Instructor")
{
    <a asp-page="./Assignments/AssignmentCreate" asp-route-id="@Model.Course.CourseID">Create new assignment</a>
    <br />
    <a asp-page="./Instructor/CourseManager">Back to Course Manager</a>
}

@if (user.Role == "Student")
{
    <a asp-page="../Index">Back to Dashboard</a>
    //Student chart goes here
    @* Display the student's current grade and points for the course displayed*@
    <div>
        <center>
            <p>
                <h4><u>Grade</u></h4>
                <h5>@Model.pointsPercentage % - @Model.finalGrade</h5> <br />
                <u>Points (Earned / Total)</u> <br />
                <b>@Model.pointsEarned / @Model.pointsTotal</b> <br />
            </p>
        </center>
    </div>
}
        
